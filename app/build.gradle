apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


androidExtensions {
    experimental = true
}
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lee.android.music"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true //开起65k
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a','x86_64'
            universalApk true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.airbnb.android:mvrx:0.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    // TODO: clean up the support library dependency resolution.
    implementation("com.android.support:appcompat-v7:$supportLibVersion") {
        exclude group: 'android.arch.lifecycle'
    }
    implementation("com.android.support:recyclerview-v7:$supportLibVersion") {
        exclude group: 'android.arch.lifecycle'
    }
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation("com.airbnb.android:epoxy:$epoxyVersion") { exclude group: 'com.android.support' }
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation "io.reactivex.rxjava2:rxjava:2.2.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "org.koin:koin-android-architecture:$koinVersion"
    implementation "android.arch.navigation:navigation-fragment-ktx:$navVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navVersion"
    implementation "com.android.support:multidex:$multidex_version"
    implementation("com.qmuiteam:qmui:$qmui_version") {
        exclude group: 'com.android.support'
    }
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"


    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.jakewharton.timber:timber:$timber_version"


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}
